<?xml version="1.0" encoding="utf-8" ?>
<!--
Use this file to control which modules to load.
The order of modules in this config matters.
Modules that depend on module(s) need to come after the module(s) they depend on.
Also, certain modules are designed to be able to chain top of another (e.g. Authentication modules)
So to be safe, only change the order if you know what you're doing.

For non-core modules (e.g. custom modules that you build):
1. Copy the .dll, the corresponding .deps.json, and any other libraries it depends on into a folder,
    preferably into its own subfolder under bin/modules.
2. Add a module entry in this file.  Do not specify the assembly in "type", instead specify a "path" to the assembly.
-->
<modules>
	<module type="SS.Core.Modules.Prng, SS.Core" />
	<module type="SS.Core.Modules.ObjectPoolManager, SS.Core" />
	<module type="SS.Core.Modules.LogManager, SS.Core" />
	<module type="SS.Core.Modules.LogConsole, SS.Core" />
	<module type="SS.Core.Modules.Mainloop, SS.Core" />
	<module type="SS.Core.Modules.ConfigManager, SS.Core" />
	<module type="SS.Core.Modules.LogFile, SS.Core" />
	<module type="SS.Core.Modules.PlayerData, SS.Core" />
	<module type="SS.Core.Modules.LagData, SS.Core" />

	<module type="SS.Core.Modules.BandwidthNoLimit, SS.Core" />
	<module type="SS.Core.Modules.Network, SS.Core" />

	<module type="SS.Core.Modules.ArenaManager, SS.Core" />
	<module type="SS.Core.Modules.MapData, SS.Core" />
	<module type="SS.Core.Modules.CapabilityManager, SS.Core" />
	<module type="SS.Core.Modules.MapNewsDownload, SS.Core" />
	<module type="SS.Core.Modules.Core, SS.Core" />
	<module type="SS.Core.Modules.ClientSettings, SS.Core" />
	
	<module type="SS.Core.Modules.PersistSQLite, SS.Core" />
	<module type="SS.Core.Modules.Persist, SS.Core" />

	<module type="SS.Core.Modules.CommandManager, SS.Core" />
	<module type="SS.Core.Modules.Chat, SS.Core" />
	
	<module type="SS.Core.Modules.Scoring.Stats, SS.Core" />
	<module type="SS.Core.Modules.Scoring.BasicStats, SS.Core" />
	
	<module type="SS.Core.Modules.LogSysop, SS.Core" />

	<module type="SS.Core.Modules.AuthFile, SS.Core" />

	<module type="SS.Core.Modules.Security, SS.Core" />

	<!-- This must be enabled for the zone to show up on directory servers. Remember to fill in [Directory] settings. -->
	<!--<module type="SS.Core.Modules.DirectoryPublisher, SS.Core" />-->

	<!-- 
	Billing - If you're using a billing server, you'll probably want to use this.
	-->
	<module type="SS.Core.Modules.BillingUdp"/>

	<module type="SS.Core.Modules.AuthBan"/>
	
	<module type="SS.Core.Modules.Banners, SS.Core" />
	<module type="SS.Core.Modules.Balls, SS.Core" />
	<module type="SS.Core.Modules.Bricks, SS.Core" />
	
	<module type="SS.Core.Modules.Game, SS.Core" />
	<module type="SS.Core.Modules.LagAction, SS.Core" />
	<module type="SS.Core.Modules.FileTransfer, SS.Core" />
	<module type="SS.Core.Modules.AutoWarp, SS.Core" />
	<module type="SS.Core.Modules.Fake, SS.Core" />
	<module type="SS.Core.Modules.PlayerCommand, SS.Core" />
	<module type="SS.Core.Modules.Help, SS.Core" />
	<module type="SS.Core.Modules.Quickfix" />
	<module type="SS.Core.Modules.AdminCommand, SS.Core" />
	<module type="SS.Core.Modules.ArenaPlaceMultiPub, SS.Core" />

	<!--
	Encryption modules
	- Order matters. An encryption module loaded earlier will be given an earlier opportunity to handle requests than one loaded later.
	  When a module handles a request, the request will not be sent to later modules.
	- At least one encryption module is required.
	-->
	<module type="SS.Core.Modules.EncryptionVIE, SS.Core"/>
	<module type="SS.Core.Modules.EncryptionNull, SS.Core"/>

	<!-- 
	Example of a non-core module
	Notice no comma in the type attribute to specify the assembly.
	Instead a path attribute is provided.
	-->
	<module type="TurfReward.TurfModule" path="bin/modules/TurfReward/TurfReward.dll" />
	<module type="TurfReward.TurfRewardPoints" path="bin/modules/TurfReward/TurfReward.dll" />

</modules>
